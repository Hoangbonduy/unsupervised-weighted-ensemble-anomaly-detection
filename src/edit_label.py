import pandas as pd
import os
from pathlib import Path

def fix_label_files():
    """
    S·ª≠a c√°c file label ƒë·ªÉ ƒë·ªìng b·ªô v·ªõi d·ªØ li·ªáu trong cleaned_data_no_zero_periods_filtered.csv
    """
    # ƒê·ªçc d·ªØ li·ªáu ch√≠nh
    print("ƒêang ƒë·ªçc d·ªØ li·ªáu ch√≠nh...")
    main_data = pd.read_csv('../data/cleaned_data_no_zero_periods_filtered.csv')
    
    # ƒê∆∞·ªùng d·∫´n ƒë·∫øn th∆∞ m·ª•c labels
    labels_dir = Path('../labels')
    
    # L·∫•y danh s√°ch t·∫•t c·∫£ c√°c placeId c√≥ trong d·ªØ li·ªáu ch√≠nh
    unique_place_ids = main_data['placeId'].unique()
    print(f"T√¨m th·∫•y {len(unique_place_ids)} placeId trong d·ªØ li·ªáu ch√≠nh")
    
    # X·ª≠ l√Ω t·ª´ng file label
    processed_count = 0
    error_count = 0
    
    for place_id in unique_place_ids:
        label_file = labels_dir / f'label_{place_id}.csv'
        
        if not label_file.exists():
            print(f"‚ö†Ô∏è  Kh√¥ng t√¨m th·∫•y file label cho placeId {place_id}")
            continue
            
        try:
            # ƒê·ªçc file label hi·ªán t·∫°i
            label_df = pd.read_csv(label_file)
            
            # L·∫•y d·ªØ li·ªáu c·ªßa placeId n√†y t·ª´ file ch√≠nh
            place_data = main_data[main_data['placeId'] == place_id][['date', 'view']].copy()
            
            if len(place_data) == 0:
                print(f"‚ö†Ô∏è  Kh√¥ng c√≥ d·ªØ li·ªáu cho placeId {place_id} trong file ch√≠nh")
                continue
            
            # Ki·ªÉm tra xem c√≥ c·∫ßn s·ª≠a kh√¥ng
            if len(label_df) == len(place_data):
                # Ki·ªÉm tra xem dates c√≥ gi·ªëng nhau kh√¥ng
                label_dates = set(label_df['date'].astype(str))
                main_dates = set(place_data['date'].astype(str))
                
                if label_dates == main_dates:
                    print(f"‚úÖ PlaceId {place_id}: ƒê√£ ƒë·ªìng b·ªô (kh√¥ng c·∫ßn s·ª≠a)")
                    continue
            
            print(f"üîß ƒêang s·ª≠a PlaceId {place_id}...")
            print(f"   - Label file c√≥ {len(label_df)} records")
            print(f"   - Main data c√≥ {len(place_data)} records")
            
            # T·∫°o DataFrame m·ªõi v·ªõi structure ƒë√∫ng
            # Gi·ªØ nguy√™n c√°c label hi·ªán c√≥ n·∫øu date t·ªìn t·∫°i, n·∫øu kh√¥ng th√¨ g√°n label = 0
            new_label_df = place_data.copy()
            new_label_df['label'] = 0  # M·∫∑c ƒë·ªãnh l√† 0
            
            # Merge v·ªõi label c≈© ƒë·ªÉ gi·ªØ l·∫°i c√°c label ƒë√£ c√≥
            label_df_clean = label_df.copy()
            label_df_clean['date'] = label_df_clean['date'].astype(str)
            new_label_df['date'] = new_label_df['date'].astype(str)
            
            # Merge ƒë·ªÉ gi·ªØ l·∫°i c√°c label c≈©
            merged = new_label_df.merge(
                label_df_clean[['date', 'label']], 
                on='date', 
                how='left', 
                suffixes=('', '_old')
            )
            
            # S·ª≠ d·ª•ng label c≈© n·∫øu c√≥, n·∫øu kh√¥ng th√¨ d√πng 0
            merged['label'] = merged['label_old'].fillna(merged['label']).astype(int)
            
            # Ch·ªâ gi·ªØ l·∫°i c√°c c·ªôt c·∫ßn thi·∫øt
            final_df = merged[['date', 'view', 'label']].copy()
            
            # Ki·ªÉm tra s·ªë l∆∞·ª£ng label = 1
            old_anomaly_count = label_df['label'].sum() if 'label' in label_df.columns else 0
            new_anomaly_count = final_df['label'].sum()
            
            print(f"   - Anomaly labels: {old_anomaly_count} ‚Üí {new_anomaly_count}")
            
            # L∆∞u file m·ªõi
            final_df.to_csv(label_file, index=False)
            print(f"‚úÖ ƒê√£ l∆∞u file label cho placeId {place_id}")
            
            processed_count += 1
            
        except Exception as e:
            print(f"‚ùå L·ªói khi x·ª≠ l√Ω placeId {place_id}: {str(e)}")
            error_count += 1
    
    print(f"\nüìä K·∫øt qu·∫£:")
    print(f"   - ƒê√£ x·ª≠ l√Ω th√†nh c√¥ng: {processed_count} files")
    print(f"   - G·∫∑p l·ªói: {error_count} files")
    print(f"   - T·ªïng s·ªë placeId: {len(unique_place_ids)}")

def verify_label_files():
    """
    Ki·ªÉm tra xem c√°c file label ƒë√£ ƒë∆∞·ª£c ƒë·ªìng b·ªô ch∆∞a
    """
    print("\nüîç ƒêang ki·ªÉm tra t√≠nh ƒë·ªìng b·ªô c·ªßa c√°c file label...")
    
    # ƒê·ªçc d·ªØ li·ªáu ch√≠nh
    main_data = pd.read_csv('../data/cleaned_data_no_zero_periods_filtered.csv')
    labels_dir = Path('../labels')
    
    sync_count = 0
    total_count = 0
    
    for label_file in labels_dir.glob('label_*.csv'):
        # Tr√≠ch xu·∫•t placeId t·ª´ t√™n file
        place_id = int(label_file.stem.replace('label_', ''))
        
        try:
            # ƒê·ªçc file label
            label_df = pd.read_csv(label_file)
            
            # L·∫•y d·ªØ li·ªáu t∆∞∆°ng ·ª©ng t·ª´ file ch√≠nh
            place_data = main_data[main_data['placeId'] == place_id]
            
            # Ki·ªÉm tra ƒë·ªìng b·ªô
            if len(label_df) == len(place_data):
                label_dates = set(label_df['date'].astype(str))
                main_dates = set(place_data['date'].astype(str))
                
                if label_dates == main_dates:
                    sync_count += 1
                    print(f"‚úÖ {label_file.name}: ƒê·ªìng b·ªô ({len(label_df)} records)")
                else:
                    print(f"‚ö†Ô∏è  {label_file.name}: Dates kh√¥ng kh·ªõp")
            else:
                print(f"‚ö†Ô∏è  {label_file.name}: S·ªë l∆∞·ª£ng records kh√¥ng kh·ªõp ({len(label_df)} vs {len(place_data)})")
            
            total_count += 1
            
        except Exception as e:
            print(f"‚ùå L·ªói khi ki·ªÉm tra {label_file.name}: {str(e)}")
    
    print(f"\nüìä K·∫øt qu·∫£ ki·ªÉm tra:")
    print(f"   - Files ƒë·ªìng b·ªô: {sync_count}/{total_count}")
    print(f"   - T·ª∑ l·ªá ƒë·ªìng b·ªô: {sync_count/total_count*100:.1f}%")

if __name__ == '__main__':
    print("üöÄ B·∫Øt ƒë·∫ßu qu√° tr√¨nh s·ª≠a file labels...")
    
    # Ki·ªÉm tra tr∆∞·ªõc khi s·ª≠a
    verify_label_files()
    
    # S·ª≠a file labels
    fix_label_files()
    
    # Ki·ªÉm tra sau khi s·ª≠a
    verify_label_files()
    
    print("\nüéâ Ho√†n th√†nh!")
